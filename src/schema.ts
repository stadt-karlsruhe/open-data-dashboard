// This schema file gets generated by 'npx ts-to-zod src/types/configuration.d.ts src/schema.ts' Maybe it should be included in the build process?
import { z } from 'zod';

const baseResourceSchema = z.object({
    id: z.string(),
    source: z.string(),
    name: z.string(),
    description: z.string().optional(),
});

export const embeddedResourceSchema = baseResourceSchema.extend({
    type: z.literal('Embedded'),
});

export const geoJSONResourceSchema = baseResourceSchema.extend({
    type: z.literal('GeoJSON'),
    visualizations: z.object({
        map: z.record(z.never()),
    }),
});

const axisPairSchema = z.object({
    xAxis: z.string(),
    yAxis: z.string(),
});

export const transformableResourceSchema = baseResourceSchema.extend({
    type: z.union([z.literal('JSON'), z.literal('CSV')]),
    skipFieldsRegEx: z.string().optional(),
    renameFields: z.record(z.string()).optional(),
    visualizations: z.object({
        barChart: z
            .object({
                axisPairs: z.array(axisPairSchema),
            })
            .optional(),
        table: z.record(z.never()),
    }),
});

export const resourceSchema = z.union([geoJSONResourceSchema, transformableResourceSchema, embeddedResourceSchema]);

export const configurationSchema = z.object({
    resources: z.array(resourceSchema),
});
